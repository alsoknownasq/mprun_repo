name: Build MPRUN

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          pyinstaller MPRUN.spec
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          pyinstaller --onefile --windowed --icon='MPRUN_macOS_icon.icns' --name="MPRUN" main.py
        else
          pyinstaller --onefile --icon='ui/Main Logos/MPRUN_icon.png' --name="MPRUN" main.py
        fi

    - name: Install Inno Setup (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        curl -L -o isetup.exe "https://jrsoftware.org/download.php/is.exe"
        ./isetup.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-

    - name: Build installer (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /Q setup.iss 

    - name: Install create-dmg (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg

    - name: Create DMG (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        create-dmg \
          --volname "MPRUN Installer" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "MPRUN.app" 200 190 \
          --hide-extension "MPRUN.app" \
          --app-drop-link 600 185 \
          "dist/MPRUN.app" \
          "MPRUN.dmg"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-installer
        path: |
          MPRUN_Setup.exe
          MPRUN.dmg
